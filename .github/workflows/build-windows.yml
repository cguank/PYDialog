name: Build Windows Executable

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Create build directory
      run: |
        mkdir -p build
        mkdir -p dist
        
    - name: Build executable
      run: |
        pyinstaller --onefile --console --add-data "imgs;imgs" --add-data "utils.py;." --hidden-import cv2 --hidden-import pyautogui --hidden-import numpy --hidden-import PIL --hidden-import PIL._tkinter_finder --hidden-import tkinter --hidden-import pyscreeze --hidden-import pytweening --hidden-import mouseinfo --hidden-import keyboard --hidden-import pygetwindow --hidden-import pyrect --name dialog_handler dialog_handler.py
        
    - name: Create README for distribution
      run: |
        echo "弹窗处理程序 - Windows版本" > dist/README.txt
        echo. >> dist/README.txt
        echo "使用说明:" >> dist/README.txt
        echo "1. 双击 dialog_handler.exe 运行程序" >> dist/README.txt
        echo "2. 程序会自动监控屏幕上的弹窗" >> dist/README.txt
        echo "3. 按 Ctrl+C 停止程序" >> dist/README.txt
        echo. >> dist/README.txt
        echo "注意事项:" >> dist/README.txt
        echo "- 确保 imgs 文件夹与 exe 文件在同一目录" >> dist/README.txt
        echo "- 程序需要管理员权限才能进行屏幕截图" >> dist/README.txt
        echo "- 如果遇到问题，请检查防火墙设置" >> dist/README.txt
        echo. >> dist/README.txt
        echo "文件结构:" >> dist/README.txt
        echo "dialog_handler.exe  - 主程序" >> dist/README.txt
        echo "imgs/              - 弹窗模板图片文件夹" >> dist/README.txt
        
    - name: Get file size
      id: file_size
      run: |
        $size = (Get-Item "dist/dialog_handler.exe").Length
        $sizeMB = [math]::Round($size / 1MB, 2)
        echo "size=$sizeMB" >> $env:GITHUB_OUTPUT
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dialog-handler-windows
        path: |
          dist/dialog_handler.exe
          dist/imgs/
          dist/README.txt
        retention-days: 30
        
    - name: Create release assets (on release)
      if: github.event_name == 'release'
      run: |
        # 创建ZIP文件
        Compress-Archive -Path "dist/*" -DestinationPath "dialog_handler_windows.zip"
        
    - name: Upload release assets (on release)
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dialog_handler_windows.zip
        asset_name: dialog_handler_windows.zip
        asset_content_type: application/zip
        
    - name: Build summary
      run: |
        echo "## 🎉 构建成功!" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "### 📁 生成的文件:" >> $env:GITHUB_STEP_SUMMARY
        echo "- **dialog_handler.exe** - Windows可执行文件" >> $env:GITHUB_STEP_SUMMARY
        echo "- **imgs/** - 弹窗模板图片文件夹" >> $env:GITHUB_STEP_SUMMARY
        echo "- **README.txt** - 使用说明" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "### 📊 文件信息:" >> $env:GITHUB_STEP_SUMMARY
        echo "- 可执行文件大小: ${{ steps.file_size.outputs.size }} MB" >> $env:GITHUB_STEP_SUMMARY
        echo "- 构建时间: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "### 🚀 部署说明:" >> $env:GITHUB_STEP_SUMMARY
        echo "1. 下载构建产物" >> $env:GITHUB_STEP_SUMMARY
        echo "2. 解压到目标Windows机器" >> $env:GITHUB_STEP_SUMMARY
        echo "3. 确保imgs文件夹包含弹窗模板图片" >> $env:GITHUB_STEP_SUMMARY
        echo "4. 双击dialog_handler.exe运行程序" >> $env:GITHUB_STEP_SUMMARY 